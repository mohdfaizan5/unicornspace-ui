export const CuisineSelectorCode = '"use client"\n\nimport { useState } from "react"\nimport { motion, AnimatePresence } from "framer-motion"\nimport { Check } from \'lucide-react\'\n\nconst cuisines = [\n  "Mexican",\n  "Italian",\n  "Chinese",\n  "Japanese",\n  "Indian",\n  "Greek",\n  "French",\n  "Spanish",\n  "Turkish",\n  "Lebanese",\n  "Vietnamese",\n  "Korean",\n  "Argentinian",\n  "Peruvian",\n  "Ethiopian",\n  "Nigerian",\n  "German",\n  "British",\n  "Irish",\n  "Swedish",\n  "Danish",\n  "Polish",\n  "Hungarian",\n  "Portuguese",\n]\n\nconst transitionProps = {\n  type: "spring",\n  stiffness: 500,\n  damping: 30,\n  mass: 0.5,\n}\n\nexport default function CuisineSelector() {\n  const [selected, setSelected] = useState<string[]>([])\n\n  const toggleCuisine = (cuisine: string) => {\n    setSelected((prev) =>\n      prev.includes(cuisine) ? prev.filter((c) => c !== cuisine) : [...prev, cuisine]\n    )\n  }\n\n  return (\n    <div className="min-h-screen bg-black p-6 pt-40">\n      <h1 className="text-white text-3xl font-semibold mb-12 text-center">\n        What are your favorite cuisines?\n      </h1>\n      <div className="max-w-[570px] mx-auto">\n        <motion.div \n          className="flex flex-wrap gap-3 overflow-visible"\n          layout\n          transition={{\n            type: "spring",\n            stiffness: 500,\n            damping: 30,\n            mass: 0.5,\n          }}\n        >\n          {cuisines.map((cuisine) => {\n            const isSelected = selected.includes(cuisine)\n            return (\n              <motion.button\n                key={cuisine}\n                onClick={() => toggleCuisine(cuisine)}\n                layout\n                initial={false}\n                animate={{\n                  backgroundColor: isSelected ? "#2a1711" : "rgba(39, 39, 42, 0.5)",\n                }}\n                whileHover={{\n                  backgroundColor: isSelected ? "#2a1711" : "rgba(39, 39, 42, 0.8)",\n                }}\n                whileTap={{\n                  backgroundColor: isSelected ? "#1f1209" : "rgba(39, 39, 42, 0.9)",\n                }}\n                transition={{\n                  type: "spring",\n                  stiffness: 500,\n                  damping: 30,\n                  mass: 0.5,\n                  backgroundColor: { duration: 0.1 },\n                }}\n                className={`\n                  inline-flex items-center px-4 py-2 rounded-full text-base font-medium\n                  whitespace-nowrap overflow-hidden ring-1 ring-inset\n                  ${isSelected \n                    ? "text-[#ff9066] ring-[hsla(0,0%,100%,0.12)]" \n                    : "text-zinc-400 ring-[hsla(0,0%,100%,0.06)]"}\n                `}\n              >\n                <motion.div \n                  className="relative flex items-center"\n                  animate={{ \n                    width: isSelected ? "auto" : "100%",\n                    paddingRight: isSelected ? "1.5rem" : "0",\n                  }}\n                  transition={{\n                    ease: [0.175, 0.885, 0.32, 1.275],\n                    duration: 0.3,\n                  }}\n                >\n                  <span>{cuisine}</span>\n                  <AnimatePresence>\n                    {isSelected && (\n                      <motion.span\n                        initial={{ scale: 0, opacity: 0 }}\n                        animate={{ scale: 1, opacity: 1 }}\n                        exit={{ scale: 0, opacity: 0 }}\n                        transition={{ \n                          type: "spring", \n                          stiffness: 500, \n                          damping: 30, \n                          mass: 0.5 \n                        }}\n                        className="absolute right-0"\n                      >\n                        <div className="w-4 h-4 rounded-full bg-[#ff9066] flex items-center justify-center">\n                          <Check className="w-3 h-3 text-[#2a1711]" strokeWidth={1.5} />\n                        </div>\n                      </motion.span>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n              </motion.button>\n            )\n          })}\n        </motion.div>\n      </div>\n    </div>\n  )\n}\n\n';
