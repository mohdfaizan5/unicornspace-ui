export const Review1Code = '"use client"\r\nimport { useEffect, useMemo, useRef, useState } from \'react\'\r\nimport clsx from \'clsx\'\r\nimport {\r\n  motion,\r\n  useInView,\r\n} from \'framer-motion\'\r\n\r\ninterface ReviewProps {\r\n  title: string\r\n  body: string\r\n  author: string\r\n  rating: number\r\n}\r\n\r\nconst reviews: ReviewProps[] = [\r\n  {\r\n    title: \'It really works.\',\r\n    body: \'I downloaded Pocket today and turned $5000 into $25,000 in half an hour.\',\r\n    author: \'CrazyInvestor\',\r\n    rating: 5,\r\n  },\r\n  {\r\n    title: \'You need this app.\',\r\n    body: \'I didn’t understand the stock market at all before Pocket. I still don’t, but at least I’m rich now.\',\r\n    author: \'CluelessButRich\',\r\n    rating: 5,\r\n  },\r\n  // (Other reviews truncated for brevity...)\r\n]\r\n\r\nfunction StarIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg viewBox="0 0 20 20" aria-hidden="true" {...props}>\r\n      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nfunction StarRating({ rating }: { rating: number }) {\r\n  return (\r\n    <div className="flex">\r\n      {[...Array(5).keys()].map((index) => (\r\n        <StarIcon\r\n          key={index}\r\n          className={clsx(\r\n            \'h-5 w-5\',\r\n            rating > index ? \'fill-cyan-500\' : \'fill-gray-300\'\r\n          )}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ReviewComponentProps extends ReviewProps {\r\n  className?: string\r\n}\r\n\r\nfunction Review({\r\n  title,\r\n  body,\r\n  author,\r\n  rating,\r\n  className,\r\n  ...props\r\n}: ReviewComponentProps) {\r\n  const animationDelay = useMemo(() => {\r\n    const possibleAnimationDelays = [\'0s\', \'0.1s\', \'0.2s\', \'0.3s\', \'0.4s\', \'0.5s\']\r\n    return possibleAnimationDelays[\r\n      Math.floor(Math.random() * possibleAnimationDelays.length)\r\n    ]\r\n  }, [])\r\n\r\n  return (\r\n    <figure\r\n      className={clsx(\r\n        \'animate-fade-in rounded-3xl bg-white p-6 opacity-0 shadow-md shadow-gray-900/5\',\r\n        className\r\n      )}\r\n      style={{ animationDelay }}\r\n      {...props}\r\n    >\r\n      <blockquote className="text-gray-900">\r\n        <StarRating rating={rating} />\r\n        <p className="mt-4 text-lg font-semibold leading-6 before:content-[\'“\'] after:content-[\'”\']">\r\n          {title}\r\n        </p>\r\n        <p className="mt-3 text-base leading-7">{body}</p>\r\n      </blockquote>\r\n      <figcaption className="mt-3 text-sm text-gray-600 before:content-[\'–_\']">\r\n        {author}\r\n      </figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nfunction splitArray<T>(array: any, numParts: number): T[][] {\r\n  const result: T[][] = []\r\n  for (let i = 0; i < array.length; i++) {\r\n    const index = i % numParts\r\n    if (!result[index]) {\r\n      result[index] = []\r\n    }\r\n    result[index].push(array[i])\r\n  }\r\n  return result\r\n}\r\n\r\ninterface ReviewColumnProps {\r\n  className?: string\r\n  reviews: any\r\n  reviewClassName?: (reviewIndex: number) =>any\r\n  msPerPixel?: number\r\n}\r\n\r\nfunction ReviewColumn({\r\n  className,\r\n  reviews,\r\n  reviewClassName = () => \'\',\r\n  msPerPixel = 0,\r\n}: ReviewColumnProps) {\r\n  const columnRef = useRef<HTMLDivElement>(null)\r\n  const [columnHeight, setColumnHeight] = useState(0)\r\n  const duration = `${columnHeight * msPerPixel}ms`\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      if (columnRef.current) {\r\n        setColumnHeight(columnRef.current.offsetHeight)\r\n      }\r\n    })\r\n\r\n    if (columnRef.current) {\r\n      resizeObserver.observe(columnRef.current)\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      ref={columnRef}\r\n      className={clsx(\'animate-marquee space-y-8 py-4\', className)}\r\n      style={{ \'--marquee-duration\': duration } as React.CSSProperties}\r\n    >\r\n      {reviews.concat(reviews).map((review: ReviewProps, reviewIndex: number) => (\r\n        <Review\r\n          key={reviewIndex}\r\n          aria-hidden={reviewIndex >= reviews.length}\r\n          className={reviewClassName(reviewIndex % reviews.length)}\r\n          {...review}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ReviewGrid() {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  // TODO: fix this for react 19 and nextjs 15\r\n  // @ts-ignore\r\n  const isInView = useInView(containerRef, { once: true, amount: 0.4 })\r\n\r\n  useEffect(() => {\r\n    console.log(\'Is in view:\', isInView)\r\n  }, [isInView])\r\n\r\n  const columns = splitArray(reviews, 3)\r\n  const splitColumns = [columns[0], columns[1], splitArray(columns[2], 2)]\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className="relative -mx-4 mt-16 grid h-[49rem] max-h-[150vh] grid-cols-1 items-start gap-8 overflow-hidden px-4 sm:mt-20 md:grid-cols-2 lg:grid-cols-3"\r\n    >\r\n      {isInView && (\r\n        <>\r\n          <ReviewColumn\r\n            reviews={[...splitColumns[0], ...splitColumns[2].flat(), ...splitColumns[1]]}\r\n            reviewClassName={(reviewIndex) =>\r\n              clsx(\r\n                reviewIndex >= splitColumns[0].length + splitColumns[2].length &&\r\n                  \'md:hidden\',\r\n                reviewIndex >= splitColumns[0].length && \'lg:hidden\'\r\n              )\r\n            }\r\n            msPerPixel={10}\r\n          />\r\n          <ReviewColumn\r\n            reviews={[...splitColumns[1], ...splitColumns[2]]}\r\n            className="hidden md:block"\r\n            reviewClassName={(reviewIndex) =>\r\n              reviewIndex >= splitColumns[1].length && \'lg:hidden\'\r\n            }\r\n            msPerPixel={15}\r\n          />\r\n          <ReviewColumn\r\n            reviews={splitColumns[2].flat()}\r\n            className="hidden lg:block"\r\n            msPerPixel={10}\r\n          />\r\n        </>\r\n      )}\r\n      <div className="pointer-events-none absolute inset-x-0 top-0 h-32 bg-gradient-to-b from-gray-50" />\r\n      <div className="pointer-events-none absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-gray-50" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Reviews() {\r\n  return (\r\n    <section\r\n      id="reviews"\r\n      aria-labelledby="reviews-title"\r\n      className="pt-20 pb-16 sm:pt-32 sm:pb-24"\r\n    >\r\n      <div>\r\n        <h2\r\n          id="reviews-title"\r\n          className="text-3xl font-medium tracking-tight text-gray-900 sm:text-center"\r\n        >\r\n          Everyone is changing their life with Pocket.\r\n        </h2>\r\n        <p className="mt-2 text-lg text-gray-600 sm:text-center">\r\n          Thousands of people have doubled their net-worth in the last 30 days.\r\n        </p>\r\n        <ReviewGrid />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n';
