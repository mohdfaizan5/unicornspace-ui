export const Features4Code = 'import React from \'react\'\r\n// TODO\r\n\r\n\r\nconst features4 = () => {\r\n  return (\r\n    <div>features4</div>\r\n  )\r\n}\r\n\r\nexport default features4\r\n\r\n// import Image from "next/image";\r\n\r\n// import { LinkIcon } from "lucide-react";\r\n// import clsx from "clsx";\r\n// import { ComponentPropsWithoutRef, ElementType, ReactNode } from "react";\r\n// import Link from "next/link";\r\n// export default function Features4() {\r\n//   const projects = [\r\n//     {\r\n//       name: "Planetaria",\r\n//       description:\r\n//         "Creating technology to empower civilians to explore space on their own terms.",\r\n//       link: { href: "http://planetaria.tech", label: "planetaria.tech" },\r\n//       logo: "üåê",\r\n//     },\r\n//     {\r\n//       name: "Animaginary",\r\n//       description:\r\n//         "High performance web animation library, hand-written in optimized WASM.",\r\n//       link: { href: "#", label: "github.com" },\r\n//       logo: "üåê",\r\n//     },\r\n//     {\r\n//       name: "HelioStream",\r\n//       description:\r\n//         "Real-time video streaming library, optimized for interstellar transmission.",\r\n//       link: { href: "#", label: "github.com" },\r\n//       logo: "üåê",\r\n//     },\r\n//     {\r\n//       name: "cosmOS",\r\n//       description:\r\n//         "The operating system that powers our Planetaria space shuttles.",\r\n//       link: { href: "#", label: "github.com" },\r\n//       logo: "üåê",\r\n//     },\r\n//     {\r\n//       name: "OpenShuttle",\r\n//       description:\r\n//         "The schematics for the first rocket I designed that successfully made it to orbit.",\r\n//       link: { href: "#", label: "github.com" },\r\n//       logo: "üåê",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className="flex flex-col justify-center items-center p-10 ">\r\n//       <ul\r\n//         role="list"\r\n//         className="grid grid-cols-1 gap-x-12 gap-y-16 sm:grid-cols-2 lg:grid-cols-3"\r\n//       >\r\n//         {projects.map((project) => (\r\n//           <Card as="li" key={project.name}>\r\n//             <div className="relative z-10 flex h-12 w-12 items-center justify-center rounded-full bg-white shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0">\r\n//               {project.logo}\r\n//             </div>\r\n//             <h2 className="mt-6 text-base font-semibold text-zinc-800 dark:text-zinc-100">\r\n//               <Card.Link href={project.link.href}>{project.name}</Card.Link>\r\n//             </h2>\r\n//             <Card.Description>{project.description}</Card.Description>\r\n//             <p className="relative z-10 mt-6 flex text-sm font-medium text-zinc-400 transition group-hover:text-teal-500 dark:text-zinc-200">\r\n//               <LinkIcon className="h-6 w-6 flex-none" />\r\n//               <span className="ml-2">{project.link.label}</span>\r\n//             </p>\r\n//           </Card>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Types for Polymorphic Components\r\n// type AsProp<C extends ElementType> = { as?: C };\r\n// type PolymorphicProps<C extends ElementType, Props = {}> = Props &\r\n//   AsProp<C> &\r\n//   Omit<ComponentPropsWithoutRef<C>, keyof Props | "as">;\r\n\r\n// // Icon Component\r\n\r\n// // Card Component\r\n// type CardProps = {\r\n//   hoverEffect?: boolean;\r\n//   className?: string;\r\n//   children: ReactNode;\r\n// };\r\n\r\n// function Card<C extends ElementType = "div">({\r\n//   as,\r\n//   hoverEffect = true,\r\n//   className,\r\n//   children,\r\n//   ...props\r\n// }: PolymorphicProps<C, CardProps>) {\r\n//   return (\r\n//     <div\r\n//       className={clsx(\r\n//         "relative flex flex-col items-start shadow-md px-5 py-2 rounded-lg hover:bg-slate-300 bg-white ",\r\n//         hoverEffect && "group",\r\n//         className\r\n//       )}\r\n//       {...props}\r\n//     >\r\n//       {children}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Card.Link\r\n// Card.Link = function CardLink({\r\n//   href,\r\n//   children,\r\n//   className,\r\n//   ...props\r\n// }: {\r\n//   href: string;\r\n//   children: ReactNode;\r\n//   className?: string;\r\n// }) {\r\n//   return (\r\n//     <Link href={href} {...props}>\r\n//       <div\r\n//         className={clsx(\r\n//           "absolute inset-0 scale-95 opacity-0 transition group-hover:scale-100 group-hover:opacity-100",\r\n//           "z-0"\r\n//         )}\r\n//       />\r\n//       <span className="relative z-10">{children}</span>\r\n//     </Link>\r\n//   );\r\n// };\r\n\r\n// // Card.Title\r\n// Card.Title = function CardTitle<C extends ElementType = "h2">({\r\n//   as,\r\n//   href,\r\n//   children,\r\n//   className,\r\n//   ...props\r\n// }: PolymorphicProps<C, { href?: string; children: ReactNode }>) {\r\n//   return (\r\n//     <h2\r\n//       className={clsx(\r\n//         "text-base font-semibold text-zinc-800 dark:text-zinc-100",\r\n//         className\r\n//       )}\r\n//       {...props}\r\n//     >\r\n//       {href ? <Card.Link href={href}>{children}</Card.Link> : children}\r\n//     </h2>\r\n//   );\r\n// };\r\n\r\n// // Card.Description\r\n// Card.Description = function ({\r\n//   children,\r\n//   className,\r\n// }: {\r\n//   children: ReactNode;\r\n//   className?: string;\r\n// }) {\r\n//   return (\r\n//     <p\r\n//       className={clsx(\r\n//         "mt-2 text-sm text-zinc-600 dark:text-zinc-400",\r\n//         className\r\n//       )}\r\n//     >\r\n//       {children}\r\n//     </p>\r\n//   );\r\n// };\r\n\r\n// // Card.Cta\r\n// Card.Cta = function ({\r\n//   children,\r\n//   className,\r\n// }: {\r\n//   children: ReactNode;\r\n//   className?: string;\r\n// }) {\r\n//   return (\r\n//     <div\r\n//       className={clsx(\r\n//         "mt-4 flex items-center text-sm font-medium text-teal-500",\r\n//         className\r\n//       )}\r\n//     >\r\n//       {children}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Card.Eyebrow\r\n// Card.Eyebrow = function <C extends ElementType = "p">({\r\n//   as,\r\n//   decorate = false,\r\n//   children,\r\n//   className,\r\n//   ...props\r\n// }: PolymorphicProps<C, { decorate?: boolean; children: ReactNode }>) {\r\n//   return (\r\n//     <div\r\n//       className={clsx(\r\n//         "order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 ",\r\n//         decorate && "pl-3.5 relative",\r\n//         className\r\n//       )}\r\n//       {...props}\r\n//     >\r\n//       {decorate && (\r\n//         <span\r\n//           className="absolute inset-y-0 left-0 flex items-center"\r\n//           aria-hidden="true"\r\n//         >\r\n//           <span className="h-4 w-0.5 bg-zinc-200 dark:bg-zinc-500 rounded-full" />\r\n//         </span>\r\n//       )}\r\n//       {children}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n// /*\r\n\r\n\r\n// import abstractBackgroundImage from \'public/images/components/abstract-background.png\'\r\n// import discordImage from \'public/images/components/discord.svg\'\r\n// import figmaImage from \'public/images/components/figma.svg\'\r\n// import videoPlayerImage from \'public/images/components/video-player.svg\'\r\n// import Image from \'next/image\'\r\n\r\n// const resources = [\r\n//   {\r\n//     title: \'Figma icon templates\',\r\n//     description:\r\n//       \'Pefectly structured templates for quickly designing new icons at dozens of common sizes.\',\r\n//     image: function FigmaImage() {\r\n//       return (\r\n//         <div className="absolute inset-0 flex items-center justify-center bg-[radial-gradient(#2C313D_35%,#000)]">\r\n//           <Image width={200} height={200} src={figmaImage} alt="" unoptimized />\r\n//         </div>\r\n//       )\r\n//     },\r\n//   },\r\n//   {\r\n//     title: \'Weekly icon teardowns\',\r\n//     description:\r\n//       \'Weekly videos where we dissect and recreate beautiful icons we find on the web.\',\r\n//     image: function VideoPlayerImage() {\r\n//       return (\r\n//         <div className="absolute inset-0 flex items-center justify-center">\r\n//           <Image\r\n//             className="absolute inset-0 h-full w-full object-cover"\r\n//             src={abstractBackgroundImage}\r\n//             alt=""\r\n//             sizes="(min-width: 1280px) 21rem, (min-width: 1024px) 33vw, (min-width: 768px) 19rem, (min-width: 640px) 50vw, 100vw"\r\n//           />\r\n//           <Image\r\n//             className="relative"\r\n//             src={videoPlayerImage}\r\n//             alt=""\r\n//             unoptimized\r\n//           />\r\n//         </div>\r\n//       )\r\n//     },\r\n//   },\r\n//   {\r\n//     title: \'Community of icon designers\',\r\n//     description:\r\n//       "A private Discord server where you can get help and give feedback on each others\' work.",\r\n//     image: function DiscordImage() {\r\n//       return (\r\n//         <div className="absolute inset-0 flex items-center justify-center bg-[#6366F1]">\r\n//           <Image src={discordImage} alt="" unoptimized />\r\n//         </div>\r\n//       )\r\n//     },\r\n//   },\r\n// ]\r\n\r\n// export default function Features4() {\r\n//   return (\r\n//     <section\r\n//       id="resources"\r\n//       aria-labelledby="resources-title"\r\n//       className=" mt-10"\r\n//     >\r\n//       <div>\r\n//         <p className=" font-display text-3xl font-bold tracking-tight text-slate-900">\r\n//           Tools and resources you can use to get started even faster and\r\n//           progress even further.\r\n//         </p>\r\n//         <p className="mt-4 text-[15px] tracking-tight text-slate-600">\r\n//           Design assets, icon teardowns, and a community of fellow icon\r\n//           designers where you can ask questions, get feedback, and accelerate\r\n//           your learning.\r\n//         </p>\r\n//       </div>\r\n//       <div  className="mt-16">\r\n//         <ol\r\n//           role="list"\r\n//           className="-mx-3 grid grid-cols-1 gap-y-10 lg:grid-cols-3 lg:text-center xl:-mx-12 xl:divide-x xl:divide-slate-400/20"\r\n//         >\r\n//           {resources.map((resource) => (\r\n//             <li\r\n//               key={resource.title}\r\n//               className="grid auto-rows-min grid-cols-1 items-center gap-8 px-3 sm:grid-cols-2 sm:gap-y-10 lg:grid-cols-1 xl:px-12"\r\n//             >\r\n//               <div className="relative h-48 overflow-hidden rounded-2xl shadow-lg sm:h-60 lg:h-40">\r\n//                 <resource.image />\r\n//               </div>\r\n//               <div>\r\n//                 <h3 className="text-base font-medium tracking-tight text-slate-900">\r\n//                   {resource.title}\r\n//                 </h3>\r\n//                 <p className="mt-2 text-sm text-slate-600">\r\n//                   {resource.description}\r\n//                 </p>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ol>\r\n//       </div>\r\n//     </section>\r\n//   )\r\n// }\r\n\r\n// */';
